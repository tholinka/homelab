---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: zwave
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      zwave:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: ghcr.io/zwave-js/zwave-js-ui
              tag: 9.31.0@sha256:361c8c958cf75b731cb73127a403c0750084b8e9b414244d80a1f1bef6bcf460
            env:
              PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              startup: *probes # template has a default failureThreshold of 30
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
                squat.ai/gpio: 1
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/hostname: p1 # only p1 has the zwave ZAC93-800 GPIO
      securityContext:
        # needs to be root to access /dev/ttyAMA0
        # runAsNonRoot: true
        # runAsUser: 1000
        # runAsGroup: 1000
        # fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: zwave
        ports:
          http:
            port: *port
          websocket:
            port: 3000
    ingress:
      app:
        className: internal
        annotations:
          hajimari.io/appName: Z-Wave
          hajimari.io/icon: mdi:z-wave
        hosts:
          - host: '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: zwave
        globalMounts:
          - path: /usr/src/app/store
      config-cache:
        existingClaim: zwave-cache
        globalMounts:
          - path: /usr/src/app/store/.config-db
      logs:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/store/logs
      tmp:
        type: emptyDir
    serviceMonitor:
      app:
        serviceName: zwave
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
