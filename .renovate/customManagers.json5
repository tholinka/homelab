{
	"$schema": "https://docs.renovatebot.com/renovate-schema.json",
	"customManagers": [
		{
			"customType": "regex",
			"description": [
				"Process YAML custom dependencies"
			],
			"fileMatch": [
				"\\.ya?ml(\\.j2)?$",
			],
			"matchStrings": [
				"datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( repository=(?<registryUrl>\\S+))?\\n.+(:\\s|=)(&\\S+\\s)?(?<currentValue>\\S+)",
				"datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)\\n.+/(?<currentValue>(v|\\d)[^/]+)"
			],
			"datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}"
		},
		{
			"customType": "regex",
			"description": [
				"Process any imageName keys in YAML files (cloudnative-pg)"
			],
			"fileMatch": [
				"\\.ya?ml(\\.j2)?$",
			],
			"matchStrings": [
				"imageName: (?<depName>[^\\s:]+):(?<currentValue>\\S+)(@(?<currentDigest>sha256:\\S+)?)"
			],
			"datasourceTemplate": "docker"
		},
		{
			"customType": "regex",
			"description": "Process various dependencies in YAML files",
			"fileMatch": [
				"\\.ya?ml(\\.j2)?$"
			],
			"matchStrings": [
				"\\S+: \"?(?<currentValue>[^\\\"\\s]+)\"? # ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?( packageName=(?<packageName>\\S+))?",
				"(?m:^[ \\t]*?# ?renovate: depName=(?<depName>\\S+)( datasource=(?<datasource>\\S+))?( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?( packageName=(?<packageName>\\S+))?\\n[ \\t]*?\\S+: \"?(?<currentValue>[^\\\"\\s]+?)\"?$)"
			],
			"datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
			"versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
			"extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
			"packageNameTemplate": "{{#if packageName}}{{{packageName}}}{{else}}{{{depName}}}{{/if}}"
		},
		{
			"customType": "regex",
			"description": "Process GitHub download dependencies in YAML files",
			"fileMatch": [
				"\\.ya?ml(\\.j2)?$"
			],
			"matchStrings": [
				"datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)\\n.+/(?<currentValue>(v|\\d)[^/]+)"
			],
			"datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
			"versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
			"extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}"
		}
	]
}
